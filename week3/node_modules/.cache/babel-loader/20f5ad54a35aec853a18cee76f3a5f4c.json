{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/Emoticon-WorldCup/week3/src/components/WorldCupContent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport WorldCupHeader from \"./WorldCupHeader\";\nimport styledComponents from \"../styles/Content-style\";\nimport { emoticonItems } from \"../assets/images/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RoundHeader\n} = WorldCupHeader;\nconst {\n  ContentWrapper,\n  ContentImg,\n  ContentName,\n  VersusDiv\n} = styledComponents;\n\nconst WorldCupContent = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [emoticons, setEmoticons] = useState([]);\n  const [displays, setDisplays] = useState([]);\n  const [winners, setWinners] = useState([]);\n  const [round, setRound] = useState([1, 8]);\n  const [title, setTitle] = useState(\"대결\");\n  useEffect(() => {\n    emoticonItems.sort(() => Math.random() - 0.5);\n    setEmoticons(emoticonItems);\n    setDisplays([emoticonItems[0], emoticonItems[1]]);\n  }, []);\n\n  const clickHandler = emoticon => event => {\n    event.target.classList.add(\"imageClick\");\n    setTimeout(() => {\n      event.target.classList.remove(\"imageClick\");\n\n      if (emoticons.length > 2) {\n        setWinners([...winners, emoticon]);\n        setDisplays([emoticons[2], emoticons[3]]);\n        setEmoticons(emoticons.slice(2));\n        setRound([round[0] + 1, round[1]]);\n      } else {\n        if (winners.length === 0) {\n          setDisplays([emoticon]);\n          navigate(\"/result\", {\n            state: emoticon\n          });\n        } else {\n          const nextStepEmoticon = [...winners, emoticon];\n          setEmoticons(nextStepEmoticon);\n          setDisplays([nextStepEmoticon[0], nextStepEmoticon[1]]);\n          setWinners([]);\n          setRound([1, round[1] / 2]);\n          if (round[1] / 2 === 2) setTitle(\"준결승\");\n          if (round[1] / 2 === 1) setTitle(\"결승\");\n        }\n      }\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RoundHeader, {\n      title: title,\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [displays.map(display => {\n        return /*#__PURE__*/_jsxDEV(ContentImg, {\n          imgUrl: display.url,\n          onClick: clickHandler(display),\n          children: /*#__PURE__*/_jsxDEV(ContentName, {\n            children: display.name\n          }, display.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, display.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(VersusDiv, {\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WorldCupContent, \"eQkGHN4OGQrq4hXZwBBiHAGM7jQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = WorldCupContent;\nexport default WorldCupContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldCupContent\");","map":{"version":3,"sources":["/Users/hongseohee/Emoticon-WorldCup/week3/src/components/WorldCupContent.jsx"],"names":["React","useState","useEffect","useNavigate","WorldCupHeader","styledComponents","emoticonItems","RoundHeader","ContentWrapper","ContentImg","ContentName","VersusDiv","WorldCupContent","navigate","emoticons","setEmoticons","displays","setDisplays","winners","setWinners","round","setRound","title","setTitle","sort","Math","random","clickHandler","emoticon","event","target","classList","add","setTimeout","remove","length","slice","state","nextStepEmoticon","map","display","url","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport WorldCupHeader from \"./WorldCupHeader\";\nimport styledComponents from \"../styles/Content-style\";\nimport { emoticonItems } from \"../assets/images/\";\nconst { RoundHeader } = WorldCupHeader;\nconst { ContentWrapper, ContentImg, ContentName, VersusDiv } = styledComponents;\n\nconst WorldCupContent = () => {\n  const navigate = useNavigate();\n  const [emoticons, setEmoticons] = useState([]);\n  const [displays, setDisplays] = useState([]);\n  const [winners, setWinners] = useState([]);\n  const [round, setRound] = useState([1, 8]);\n  const [title, setTitle] = useState(\"대결\");\n\n  useEffect(() => {\n    emoticonItems.sort(() => Math.random() - 0.5);\n    setEmoticons(emoticonItems);\n    setDisplays([emoticonItems[0], emoticonItems[1]]);\n  }, []);\n  const clickHandler = (emoticon) => (event) => {\n    event.target.classList.add(\"imageClick\");\n    setTimeout(() => {\n      event.target.classList.remove(\"imageClick\");\n      if (emoticons.length > 2) {\n        setWinners([...winners, emoticon]);\n        setDisplays([emoticons[2], emoticons[3]]);\n        setEmoticons(emoticons.slice(2));\n        setRound([round[0] + 1, round[1]]);\n      } else {\n        if (winners.length === 0) {\n          setDisplays([emoticon]);\n          navigate(\"/result\", { state: emoticon });\n        } else {\n          const nextStepEmoticon = [...winners, emoticon];\n          setEmoticons(nextStepEmoticon);\n          setDisplays([nextStepEmoticon[0], nextStepEmoticon[1]]);\n          setWinners([]);\n          setRound([1, round[1] / 2]);\n          if (round[1] / 2 === 2) setTitle(\"준결승\");\n          if (round[1] / 2 === 1) setTitle(\"결승\");\n        }\n      }\n    }, 2000);\n  };\n\n  return (\n    <>\n      <RoundHeader title={title} round={round}></RoundHeader>\n      <ContentWrapper>\n        {displays.map((display) => {\n          return (\n            <ContentImg\n              key={display.name}\n              imgUrl={display.url}\n              onClick={clickHandler(display)}\n            >\n              <ContentName key={display.name}>{display.name}</ContentName>\n            </ContentImg>\n          );\n        })}\n        <VersusDiv>VS</VersusDiv>\n      </ContentWrapper>\n    </>\n  );\n};\nexport default WorldCupContent;\n"]},"metadata":{},"sourceType":"module"}